swagger: '2.0'
info:
  description: |-
    REST API documentation for the app Repository Templates for Bitbucket.
                                        The REST API allows you to maintain the project settings of the
                                        app as well as the global repository templates.
  version: v1
  title: Repository Templates for Bitbucket REST API
  contact:
    name: Mibex Software GmbH
    url: 'https://www.mibexsoftware.com'
  license:
    name: 'Copyright (c) 2019 by Mibex Software GmbH, Switzerland. All rights reserved.'
    url: 'https://mibexsoftware.com/imprint/'
host: YOUR_BITBUCKET_SERVER
basePath: /rest/templates4stash/1.0
tags:
  - name: Create repository
  - name: Global templates
  - name: Project settings
  - name: Project templates
schemes:
  - http
  - https
paths:
  /global-templates:
    get:
      tags:
        - Global templates
      summary: Returns the defined global repository templates.
      description: ''
      operationId: getGlobalTemplates
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Global repository templates found
        '401':
          description: The currently authenticated user does not have ADMIN credentials
    post:
      tags:
        - Global templates
      summary: Creates a global repository template.
      description: ''
      operationId: createGlobalTemplate
      produces:
        - application/json
      parameters:
        - in: body
          name: Global template details
          required: true
          schema:
            $ref: '#/definitions/GlobalTemplate'
      responses:
        '200':
          description: Global repository template created
        '400':
          description: Invalid input parameters like a non-existing template
        '401':
          description: The currently authenticated user does not have ADMIN credentials
    put:
      tags:
        - Global templates
      summary: Updates a global repository template.
      description: ''
      operationId: updateGlobalTemplate
      produces:
        - application/json
      parameters:
        - in: body
          name: Global template details
          required: true
          schema:
            $ref: '#/definitions/GlobalTemplate'
      responses:
        '200':
          description: Global repository template updated
        '401':
          description: The currently authenticated user does not have ADMIN credentials
        '404':
          description: The global template does not exist
    delete:
      tags:
        - Global templates
      summary: Deletes a global repository template.
      description: ''
      operationId: deleteGlobalTemplate
      produces:
        - application/json
      parameters:
        - name: id
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Global repository template deleted
        '401':
          description: The currently authenticated user does not have ADMIN credentials
        '404':
          description: The global template does not exist
  '/projects/{projectKey}/project-templates':
    get:
      tags:
        - Project templates
      summary: Returns the defined project-level repository templates.
      description: ''
      operationId: getProjectTemplates
      produces:
        - application/json
      parameters:
        - name: projectKey
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Project-level repository templates found
        '401':
          description: The currently authenticated user does not have PROJECT_ADMIN credentials
    post:
      tags:
        - Project templates
      summary: Creates a project-level repository template.
      description: ''
      operationId: createProjectTemplate
      produces:
        - application/json
      parameters:
        - name: projectKey
          in: path
          required: true
          type: string
        - in: body
          name: Project template details
          required: true
          schema:
            $ref: '#/definitions/ProjectTemplate'
      responses:
        '200':
          description: Project-level repository template created
        '400':
          description: Invalid input parameters like a non-existing template
        '401':
          description: The currently authenticated user does not have PROJECT_ADMIN credentials
    put:
      tags:
        - Project templates
      summary: Updates a project-level repository template.
      description: ''
      operationId: updateProjectTemplate
      produces:
        - application/json
      parameters:
        - name: projectKey
          in: path
          required: true
          type: string
        - in: body
          name: Project template details
          required: true
          schema:
            $ref: '#/definitions/ProjectTemplate'
      responses:
        '200':
          description: Project-level repository template updated
        '401':
          description: The currently authenticated user does not have PROJECT_ADMIN credentials
        '404':
          description: The project template does not exist
    delete:
      tags:
        - Project templates
      summary: Deletes a project-level repository template.
      description: ''
      operationId: deleteProjectTemplate
      produces:
        - application/json
      parameters:
        - name: projectKey
          in: path
          required: true
          type: string
        - name: id
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Project-level repository template deleted
        '401':
          description: The currently authenticated user does not have PROJECT_ADMIN credentials
        '404':
          description: The project template does not exist
  '/projects/{projectKey}/repo-template':
    post:
      tags:
        - Create repository
      summary: Creates a repository from a template.
      description: ''
      operationId: createRepoFromTemplate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: projectKey
          in: path
          required: true
          type: string
        - in: body
          name: Repository create from template details
          required: true
          schema:
            $ref: '#/definitions/RepoCreateInfo'
      responses:
        '202':
          description: Repository from template creation triggered
        '400':
          description: The given repository template or the new repository parameters are invalid
        '401':
          description: The currently authenticated user does not have PROJECT_ADMIN credentials
        '404':
          description: The project does not exist
  '/projects/{projectKey}/settings':
    get:
      tags:
        - Project settings
      summary: Returns the project settings of the plug-in.
      description: ''
      operationId: getProjectSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: projectKey
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Project settings found
        '401':
          description: The currently authenticated user does not have PROJECT_ADMIN credentials
        '404':
          description: Project not found or no project settings
    put:
      tags:
        - Project settings
      summary: Updates the project settings of the plug-in.
      description: ''
      operationId: updateProjectSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: projectKey
          in: path
          required: true
          type: string
        - in: body
          name: Project settings
          required: true
          schema:
            $ref: '#/definitions/ProjectSettings'
      responses:
        '200':
          description: Project settings updated
        '401':
          description: The currently authenticated user does not have PROJECT_ADMIN credentials
        '404':
          description: Project not found or no project settings
definitions:
  GlobalTemplate:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: the ID of the global template configuration
      template:
        type: object
        description: 'the template repository; just pass its repository ID, e.g., { "id": 1 }'
        additionalProperties:
          type: object
      description:
        type: string
        description: the description of the global template
      logoData:
        type: string
        description: the base64-encoded image logo
  ProjectSettings:
    type: object
    properties:
      templateFeatureEnabled:
        type: boolean
        description: 'Enables/disables repository templates for project '
        default: false
      allowUsersToChooseTemplate:
        type: boolean
        description: true if a user is allowed to choose another template than the default when creating a new repository
        default: false
      repoMirrorEnabled:
        type: boolean
        description: true if you want the content of a template being mirrored to a repository on its creation
        default: false
      gitMirrorType:
        type: string
        description: Configure how the repository template content should be copied to the new repository.
        enum:
          - MIRROR
          - WITHOUTHISTORY
      forkTemplateSyncEnabled:
        type: boolean
        description: Sync settings from template to new repository forks
        default: false
      settingsToUse:
        description: choose all settings which should be copied (when creating a new repository with a template) or reset (when you have the periodic settings reset enabled below) from templates to their associated repositories
        $ref: '#/definitions/SettingsToUse'
      cronExpression:
        type: string
        description: the cron expression to use for resetting the settings of associated repositories to the one of the configured template (use null to deactivate the periodic reset)
  ProjectTemplate:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: the ID of the project-level template configuration
      template:
        type: object
        description: 'the template repository; just pass its repository ID, e.g., { "id": 1 }'
        additionalProperties:
          type: object
      description:
        type: string
        description: the description of the project-level template
      logoData:
        type: string
        description: the base64-encoded image logo
      defaultTemplate:
        type: boolean
        description: is default template
        default: false
      repos:
        type: array
        description: 'the list of repositories that should be assigned to this template; just pass a list of repository ID''s, e.g., [ { "id": 1 }, { "id": 2 } ]. You should leave this empty for DELETE.'
        items:
          type: object
          additionalProperties:
            type: object
  RepoCreateInfo:
    type: object
    required:
      - repoName
      - template
    properties:
      template:
        type: object
        description: 'the template repository; just pass its repository ID, e.g., { "id": 1 } OR project key and repository slug, e.g. { "project": { "key": "PROJECT_1" }, "slug": "rep_1" }'
        additionalProperties:
          type: object
      repoName:
        type: string
        description: the name of the to be created repository from the given template
  SettingsToUse:
    type: object
    properties:
      repositoryDetails:
        type: boolean
        description: true if the repository details (default branch and "Allow forks" setting) of the template should be applied to associated repositories
        default: false
      repositoryHooks:
        type: boolean
        description: true if the hook settings of the template should be applied to associated repositories
        default: false
      repositoryHooksToIgnore:
        type: array
        description: a list of Bitbucket Server hook keys for which settings should not get overwritten by the ones from the template
        items:
          type: string
      repositoryPermissions:
        type: boolean
        description: true if the repository permissions of the template should be applied to associated repositories
        default: false
      branchPermissions:
        type: boolean
        description: true if the branch permissions of the template should be applied to associated repositories
        default: false
      pullRequestSettings:
        type: boolean
        description: true if the pull request settings of the template should be applied to associated repositories
        default: false
      webhooks:
        type: boolean
        description: (since version 2.2.0) true if the webhooks of the template should be applied to associated repositories
        default: false
      accessKeys:
        type: boolean
        description: (since version 2.2.0) true if the access keys of the template should be applied to associated repositories
        default: false
